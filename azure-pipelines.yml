# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

jobs:
  - job: linux_chrome
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'Install Node.js'

    - script: |
        npm ci
      displayName: 'npm ci'

    - script: |
        npm run test:chrome
      continueOnError: true
      displayName: 'Run test with chrome'

    - task: PublishTestResults@2
      inputs:
        testRunner: JUnit
        testResultsFiles: '**/*.xml'

  - job: linux_firefox
    pool:
      vmImage: 'ubuntu-latest'

    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '10.x'
        displayName: 'Install Node.js'

      - script: |
          npm ci
        displayName: 'npm ci'

      - script: |
          npm run test:firefox
        continueOnError: true
        displayName: 'Run test with firefox'

      - task: PublishTestResults@2
        inputs:
          testRunner: JUnit
          testResultsFiles: ./reporter/*.xml

  - job: macos_safari
    pool:
      vmImage: 'macOS-10.13'

    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '10.x'
        displayName: 'Install Node.js'

      - script: |
          npm ci
        displayName: 'npm ci'

      - script: |
          npm run test:safari
        continueOnError: true
        displayName: 'Run test with safari'

      - task: PublishTestResults@2
        inputs:
          testRunner: JUnit
          testResultsFiles: ./reporter/*.xml

  - job: windows_ie
    pool:
      vmImage: 'vs2017-win2016'

    steps:
      - task: NodeTool@0
        inputs:
          versionSpec: '10.x'
        displayName: 'Install Node.js'

      - script: |
          npm ci
        displayName: 'npm ci'

      - script: |
          npm run test:ie
        continueOnError: true
        displayName: 'Run test with edge'

      - task: PublishTestResults@2
        inputs:
          testRunner: JUnit
          testResultsFiles: ./reporter/*.xml
